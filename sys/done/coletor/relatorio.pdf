#!/usr/bin/perl

use HTML::Entities;
use Encode;
use PDF::Reuse;

$nacess = "66";
require "../../cfg/init.pl";
$RELATORIO = &get('RELATORIO');
$ID = &get('ID');
# $RELATORIO = 22;

# ajusta encoding do banco
$rv = $dbh->do("SET CLIENT_ENCODING TO 'ISO-8859-1'");

# testa se erro
if($dbh->err ne "") { &erroDBH("Falha ao gerar relatório !!!"); &erroDBR; exit; } 

# [INI] SQLs necessarios para relatorio ----------------------------------------------------------------------------------------	  
# Soma totais
$DB = &select("select sum(tempo_exec) as tempo_exec_total, sum(tempo_faturado) as tempo_faturado_total, (sum(tempo_exec) - sum(tempo_faturado)) as total_geral from coletor_relatorio_data where pai = $RELATORIO;");
$TOTAL = $DB->fetchrow_hashref();

# Pega dados do pai
$DB = &select("select coletor_relatorio.*, usuario.nome as usuario_nome, empresa.nome as cliente_nome, empresa.apelido as cliente_apelido from coletor_relatorio left join usuario on (usuario.usuario = coletor_relatorio.usuario) left join empresa on (empresa.codigo = coletor_relatorio.cliente) where coletor_relatorio.codigo = $RELATORIO;");
$PAI = $DB->fetchrow_hashref();
# corrige se campo apelido estiver vazio
if($PAI->{cliente_apelido} eq "")
	{ $filename = substr($PAI->{cliente_nome}, 0, 15); } 
else
	{ $filename = $PAI->{cliente_apelido}; } 
# ajuste para listagem avulsa
if($PAI->{cliente} == NULL)
	{
	$PAI->{cliente_nome} = "Clientes Avulso";
	$ORDERBY = "order by empresa.nome, codigo desc";
	}
else
	{
	$ORDERBY = "order by codigo desc";
	}

# gera relatorio
$sth = &select("select coletor_relatorio_data.*, empresa.nome as cliente_nome from coletor_relatorio_data left join empresa on (empresa.codigo = coletor_relatorio_data.cliente) where coletor_relatorio_data.pai = $RELATORIO $ORDERBY;");
if($sth->rows() < 1) { &erroDBH("Nenhum !!!"); &erroDBR; exit; } 
# [END] SQLs necessarios para relatorio ----------------------------------------------------------------------------------------	  

# [INI] configuracao inicial da impressao --------------------------------------------------------------------------------
# nome do arquivo pdf
$filename .= ".pdf";
# numero pagina inicial
$page = 1; 
	
# linha
$LINI = 715;
$LMIN = 30;
$L = $LINI;
	
$CINI = 43;
$C = $CINI;

# default fonte
$font{family} = "Helvetica";
$font{size} = "10";
$font{color_r} = "0";
$font{color_g} = "0";
$font{color_b} = "0";

# header necessario para pdf files
print $query->header('application/pdf');
prFile( {
		file => $filename,
		FitWindow  => 1,
		effect => load,
		CenterWindow => 1
		} );
prCompress(1);

# usando modelo folha timbrada
if($LOGEMPRESA eq "1")
	{
	prForm( 
		{
		file => '../relat/modelo_folha_timbrada.pdf',
		page => 1
		} );
	}
# [END] configuracao inicial da impressao --------------------------------------------------------------------------------

# [INI] Impressao --------------------------------------------------------------------------------------------------------

# header, default for pages
&pgHead();
$old_cli = "";
while($coletores = $sth->fetchrow_hashref)
	{
	&pgLine;
	$old_cli = $coletores->{cliente_nome};
	}

# [INI] Footer -----------------------------------------------------------------------------------------------------------
# totais
$L -= 20;
# finaliza pagina e inicia outra se for o caso
if($L < $LMIN+20)
	{ &pgBreak; }
prAdd("q 30 ".($L+10)." 540 0.5 re 0 0.3 0.6 rg f Q"); # line horizontal 3

# ajusta fonte
prFontSize(10);
prColor(23, 54, 93);

# total duracao
# prText($C+55,$L, &dateToShow($TOTAL->{tempo_exec_total})."h");

# total faturado
# prText($C+100,$L, &dateToShow($TOTAL->{tempo_faturado_total})."h");

# titulo final 
prFontSize(12);
prText($C+450,$L-4, "Total de Horas", "right");
prText($C+520,$L-4, &dateToShow($TOTAL->{tempo_exec_total})."h", "right");
prText($C+450,$L-20, "Total de Horas Faturadas", "right");
prText($C+520,$L-20, &dateToShow($TOTAL->{tempo_faturado_total})."h", "right");
prText($C+450,$L-35, "Total de Horas de Abono", "right");
prText($C+520,$L-35, &dateToShow($TOTAL->{total_geral})."h", "right");

if($PAI->{obs} ne "")
	{
	# obs field
	$L -= 60;
	prText($C+40, $L, "Obs.:", "left");
	prFontSize(8);
	prColor(0, 0, 0);
	$L -= 14;
	&left("\\s\\s$PAI->{obs}", $C+45, $font{family}, 10, 280);
	}

# prAdd("q 80 ".($L+10)." 400 0.5 re 0 0.3 0.6 rg f Q"); # line horizontal 4
# prAdd("q 80 ".($L-3.9)." 0.5 14 re 0 0.3 0.6 rg f Q"); # line vertical 3
# prAdd("q ".($C+526.5)." ".($L-3.8)." 0.5 14 re 0 0.3 0.6 rg f Q"); # line vertical 4
# prAdd("q 80 ".($L-4)." 400 0.5 re 0 0.3 0.6 rg f Q"); # line horizontal 5

# mostra page
$L = 32;
prFontSize(8);
prText(40, $L, decode("utf-8",$DATA_SEMANA[&timestamp("week")]).", ".&timestamp("day")." de ".decode("utf-8",$DATA_MES[&timestamp("month")])." de ".&timestamp("year") , "left");
prText(555, $L, "Página $page", "right");
prPage();
prEnd();
# [END] Footer -----------------------------------------------------------------------------------------------------------




sub pgLine
	{
	# config padrao de fonte
	prFont($font{family});
	prFontSize($font{size});
	prColor($font{color_r}, $font{color_g}, $font{color_b});
	
	# prAdd("q $C ".($L+2)." 4 4 re 0 0 0.5 rg f Q");
	
	# AVULSO listagem avulsa
	prFont($font{family}."-Bold");
	if($PAI->{cliente} == NULL)
		{ 
		# corrige se campo apelido estiver vazio
		if($coletores->{cliente_apelido} eq "")
			{ $coletores->{cliente_nome} = substr($coletores->{cliente_nome}, 0, 200); } 
		else
			{ $coletores->{cliente_nome} = $coletores->{cliente_apelido}; }

		if($old_cli ne $coletores->{cliente_nome})
			{
			prAdd("q ".($C-5)." ".($L+1)." 4 4 re 0 0 0.5 rg f Q"); # bullet
			&left("\\s\\s$coletores->{cliente_nome}", $C, $font{family}, 10, 400); 
			$L -= 3;
			}
		else
			{
			$L += 10;
			}
		}
	
	prFont($font{family});
	prFontSize(8);
	$LREG = $L;
	# data 
	if($LOGEMPRESA eq "1")
		{
		prText($C-10,$L, &dateToShow($coletores->{data_exec},"DATE"));
		}
	else
		{
		prText($C-10,$L, &dateToShow($coletores->{data_exec}));
		}
	# duracao
	prText($C+55,$L, &dateToShow($coletores->{tempo_exec})."h");
	# faturado
	prText($C+100,$L, &dateToShow($coletores->{tempo_faturado})."h");
	# 40 char max lenght
	# prText($C+130,$L, $coletores->{descrp});
	# profissional
	prFontSize(8);
	if(length($coletores->{profissional}) > 14)
		{ $coletores->{profissional} = substr($coletores->{profissional}.".", 0, 15); }
	prText($C+390,$LREG, $coletores->{profissional});
	# forma
	if($coletores->{forma} eq "Assistência Técnica")
		{
		$coletores->{forma} = "Assist.Téc.";
		}
	elsif($coletores->{forma} eq "Desenvolvimento Sistemas")
		{
		$coletores->{forma} = "Dev.Sistemas";
		}
	if(length($coletores->{forma}) > 8)
		{ prFontSize(7); }
	prText($C+457,$LREG, $coletores->{forma});
	# servidor
	prFontSize(8);
	if($coletores->{servidor} == 1)
		{ $coletores->{servidor} = "Sim"; }
	else
		{ $coletores->{servidor} = "Não"; }
	prFont($font{family}."-Bold");
	prText($C+500,$LREG, $coletores->{servidor});


	# descricao
	prFont($font{family});
	prFontSize(8);
	if($coletores->{solicitante} ne "")
		{
		&left("\\s\\s$coletores->{solicitante}: ".decode_entities($coletores->{descrp}), $C+140, $font{family}, 10, 280);
		}
	else
		{
		&left("\\s\\s".decode_entities($coletores->{descrp}), $C+140, $font{family}, 10, 280);
		}


	
	# calculo para adicionar nova linha
	$L -= 14;
	
	# finaliza pagina e inicia outra se for o caso
	if($L < $LMIN)
		{ &pgBreak; }
	}
# [END] Impressao --------------------------------------------------------------------------------------------------------


# [INI] Funcoes usadas para gerar pdf ------------------------------------------------------------------------------------
# header
sub pgHead
	{
	# Cabeçalho
	if($L eq $LINI && $C eq $CINI)
		{
		# font config
		prFont($font{family}."-Bold");
		prFontSize(20);
		prColor(23, 54, 93);
		
		# titulo
		prText($C, $L, "Relatório de Horas", "left");
		# prAdd(q\n $Column  $Line re\n $Width  $Height  $color_R_G_B rg\nf\nQ\n);
		prAdd("q\n$C ".($L-4)." 500 0.5 re\n0 0.3 0.6 rg\nf\nQ\n"); # line horizontal 0
		$L -= 18;
		
		# empresa
		prFont($font{family}."-BoldOblique"); 
		prFontSize(12);
		prText($C, $L, "  $PAI->{'cliente_nome'}", "left");
		$L -= 14;
		
		# periodo 
		prFont($font{family}."-Oblique"); 
		prFontSize(10);
		prText($C, $L, "   Período: ".&dateToShow($PAI->{data_ini},"DATE")." até ".&dateToShow($PAI->{data_fim},"DATE")." ", "left");
		$L -= 25;
		 
		# data header
		prFont($font{family}."-Bold"); 
		prFontSize(9);
		prAdd("q 30 ".($L+10)." 540 0.5 re 0 0.3 0.6 rg f Q"); # line horizontal 1
		prAdd("q 30 ".($L-3.9)." 0.5 14 re 0 0.3 0.6 rg f Q"); # line vertical 1
		prText($C+5, $L, "Data", "left");
		prText($C+53, $L, "Duração", "left");
		prText($C+96, $L, "Faturado", "left");
		prText($C+145, $L, "Descrição", "left");
		prFontSize(8);
		prText($C+392, $L, "Profissional", "left");
		prText($C+458, $L, "Forma", "left");
		prText($C+492, $L, "Servidor", "left");
		prAdd("q ".($C+526.5)." ".($L-3.8)." 0.5 14 re 0 0.3 0.6 rg f Q"); # line vertical 2
		prAdd("q 30 ".($L-4)." 540 0.5 re 0 0.3 0.6 rg f Q"); # line horizontal 2
		$L -= 20;
		}
	}
	
# quebra de pagina
sub pgBreak
	{			
	$L = 32;
	prFontSize(8);
	prFont($font{family}); 
	prText(555, $L, "Página $page", "right");
	prPage();

	# usando modelo folha timbrada
	if($LOGEMPRESA eq "1")
		{
		# usando modelo folha timbrada
		prForm( 
			{
			file => '../relat/modelo_folha_timbrada.pdf',
			page => 1
			} );
		}
			
	$page++;
	$L = $LINI;
	$C = $CINI;

	&pgHead;
	}

# cor da fonte
sub prColor
	{
	my($intRed, $intGreen, $intBlue) = @_;
	$intSaveR = $intRed;
	$intSaveG = $intGreen;
	$intSaveB = $intBlue;
	prAdd(($intRed/256)." ".($intGreen/256)." ".($intBlue/256)." rg");
	}
	
# linha com alinhamento a esquerda
sub left
	{
	my $string = shift;
	my $x = shift || 25;
	my $fnt = shift || "H";
	my $tam = shift || 8;
	my $r = shift || 250;
	my $Lini = $L;
	my @WM;
	my @WM2;
	@WM = split(' ',$string);
	my $t = 0;
	my $t2=0;
	$WM2[0] = "";
	while($t < @WM)
		{
		$WM[$t] =~ s/\\t/          /gm;
		$WM[$t] =~ s/\\s/ /gm;
		if(prStrWidth($WM2[$t2].$WM[$t], $fnt, $tam) > $r)
			{
			$t2++;
			}
		$WM2[$t2] .= $WM[$t]." ";
		$t++;
		}
	for($f=0; $f < @WM2; $f++)
		{
		prText($x, $L, @WM2[$f]);
		$L-=($tam+1);

		if($L < $LMIN)
		      {
		      prAdd("q ".($C-10)." ".($Lini+22)." 600 -".($L+600)." re 1 1 1 rg f Q");
		      &pgBreak;
		      $old_cli = "";
		      if($coletores->{data_exec} ne "")
			    {
			    &pgLine;
			    }
		      }

		}
	}

# linha justificada
sub justify
	{
	my $string = shift;
	my $x = shift || 25;
	my $fnt = shift || "H";
	my $rend = shift || 570;
	my $r = $rend - $x;
	my @WM;
	my @WM2;
	@WM = split(' ',$string);
	my $t=0;
	my $t2=0;
	$WM2[0] = "";
	while($t < @WM)
		{
		if(prStrWidth($WM2[$t2].$WM[$t], $fnt, 8) > $r)
			{
			$t2++;
			}
		$WM2[$t2] .= $WM[$t]." ";
		$t++;
		}
	for($f=0; $f < @WM2-1; $f++)
		{
		$WM2[$f] = substr($WM2[$f],0,-1);
		$t=length($WM2[$f])-2;
		while(prStrWidth(@WM2[$f], $fnt, 8) < $r)
			{
			if(substr($WM2[$f], $t, 1) eq " ")
				{
				$WM2[$f] = substr($WM2[$f], 0, $t)." ".substr($WM2[$f], $t);
				}
			if($t < 1)
				{
				$t = length($WM2[$f])-2;
				}
			else
				{
				$t--;
				}
			}
		my $p = rindex($WM2[$f], " ");
		$WM2[$f] =~ s/[#]/  /gm;
		prText($x, $L, substr($WM2[$f], 0, $p));
		prText($rend-1, $L, substr($WM2[$f], $p), 'right');
		$L-=9;
		}
	prText($x, $L, @WM2[$f]);
	if($L < $LMIN)
		{
		&pgBreak;
		}
	}
# [END] Funcoes usadas para gerar pdf ------------------------------------------------------------------------------------
